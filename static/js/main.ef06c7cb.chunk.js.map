{"version":3,"sources":["RestaurantInfo.js","RestaurantDatabase.js","Confetti.js","App.js","reportWebVitals.js","index.js"],"names":["RestaurantInfo","randomColor","this","props","displayColor","document","documentElement","style","backgroundColor","className","color","id","restaurant","type","Math","random","onClick","nextClick","pickClick","React","Component","restaurants","Confetti","useState","isExploding","App","generaterandomRestaurant","randomRestaurant","setState","shuffleRestaurants","console","log","state","types","randomNumber","floor","length","array","sort","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2OAqCeA,E,4JAlCb,WACE,IAAMC,EAAcC,KAAKC,MAAMC,eAI/B,OAHaC,SAASC,gBACjBC,MAAMC,gBAAkBP,EAG3B,sBAAKM,MAAO,CAAEC,gBAAiB,SAAWC,UAAU,MAApD,UACE,sBACEA,UAAU,SAEVF,MAAO,CAAEG,MAAOT,GAHlB,UAKE,oBAAIU,GAAG,aAAP,SAAqBT,KAAKC,MAAMS,aAChC,oBAAID,GAAG,OAAP,SAAeT,KAAKC,MAAMU,SAJrBC,KAAKC,UAMZ,wBACER,MAAO,CAAEC,gBAAiBP,GAC1BU,GAAG,UACHK,QAASd,KAAKC,MAAMc,UAHtB,kBAOJ,wBACEV,MAAO,CAAEC,gBAAiBP,GACtBU,GAAG,UACHK,QAASd,KAAKC,MAAMe,UAH1B,yB,GAvByBC,IAAMC,WCgBpBC,EAlBG,CACjB,CACG,WAAc,aACd,KAAQ,QACL,CACH,WAAc,UACd,KAAQ,UACP,CACD,WAAc,YACd,KAAQ,iBACP,CACD,WAAc,SACd,KAAQ,cACL,CACL,WAAc,SACd,KAAQ,U,iCCDKC,MATf,WAAqB,IAAD,EACoBH,IAAMI,UAAS,GADnC,mBACXC,EADW,KAElB,OAFkB,KAGhB,mCACGA,GAAe,cAAC,IAAD,OCoDPC,E,kDArDb,aAAe,IAAD,8BAEZ,gBAeFR,UAAY,WACV,IAAMS,EAA2B,EAAKC,mBACtC,EAAKC,SAAS,CACZhB,WAAYc,EAAyBd,WACrCC,KAAMa,EAAyBb,OAEjC,EAAKgB,mBAAmBR,IAvBZ,EA0BfH,UAAY,WACXY,QAAQC,IAAI,iBACXT,KAzBC,EAAKU,MAAQ,CACdpB,WAAYS,EAAY,GAAGT,WAC3BqB,MAAOZ,EAAY,GAAGR,MALT,E,oDAQd,WACE,IAAMqB,EAAepB,KAAKqB,MAAMrB,KAAKC,SAAWM,EAAYe,QAC5D,OAAOf,EAAYa,K,gCAGrB,SAAmBG,GACjB,OAAOA,EAAMC,MAAK,kBAAIxB,KAAKC,SAAS,Q,yBAiBtC,WAKE,MAJW,sBACPD,KAAKqB,MAAsB,IAAhBrB,KAAKC,UADT,oBAEPD,KAAKqB,MAAsB,IAAhBrB,KAAKC,UAFT,oBAGPD,KAAKqB,MAAsB,IAAhBrB,KAAKC,UAHT,O,oBAOb,WACE,OACE,8BACE,cAAC,EAAD,aACEX,aAAcF,KAAKD,YACnBgB,UAAWf,KAAKe,UACrBC,UAAWhB,KAAKgB,WACPhB,KAAK8B,c,GAhDDb,IAAMC,WCMTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7C,SAAS8C,eAAe,SAM1BZ,K","file":"static/js/main.ef06c7cb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass RestaurantInfo extends React.Component {\r\n  render() {\r\n    const randomColor = this.props.displayColor();\r\n    const html = document.documentElement;\r\n    html.style.backgroundColor = randomColor;\r\n\r\n    return (\r\n      <div style={{ backgroundColor: \"white\" }} className=\"box\">\r\n        <div\r\n          className=\"fadeIn\"\r\n          key={Math.random()}\r\n          style={{ color: randomColor }}\r\n        >\r\n          <h1 id=\"restaurant\">{this.props.restaurant}</h1>\r\n          <h5 id=\"type\">{this.props.type}</h5>\r\n        </div>\r\n        <button\r\n          style={{ backgroundColor: randomColor }}\r\n          id=\"buttons\"\r\n          onClick={this.props.nextClick}\r\n        >\r\n          Next\r\n        </button>\r\n\t\t\t\t<button\r\n\t\t\t\t\t style={{ backgroundColor: randomColor }}\r\n          id=\"buttons\"\r\n          onClick={this.props.pickClick}\r\n\t\t\t\t>\r\n\t\t\t\t\tPick\r\n\t\t\t\t</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RestaurantInfo;","const restaurants=[\r\n\t{\r\n    \"restaurant\": \"Mercy Thai\",\r\n    \"type\": \"Thai\"\r\n    }, {\r\n    \"restaurant\": \"Astoria\",\r\n    \"type\": \"Indian\"\r\n\t\t}, {\r\n    \"restaurant\": \"China Wok\",\r\n    \"type\": \"Cheap Chinese\"\r\n\t\t}, {\r\n    \"restaurant\": \"Saigon\",\r\n    \"type\": \"Vietnamese\"\r\n    }, {\r\n\t\t\"restaurant\": \"Arby's\",\r\n\t\t\"type\": \"Trash\"\r\n\t}\r\n]\r\nexport default restaurants","//https://www.npmjs.com/package/@reonomy/react-confetti-explosion\r\n\r\nimport React from 'react';\r\nimport ConfettiExplosion from '@reonomy/react-confetti-explosion';\r\n\r\nfunction Confetti() {\r\n  const [isExploding, setIsExploding] = React.useState(true);\r\n  return (\r\n    <>\r\n      {isExploding && <ConfettiExplosion />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Confetti;","import React from \"react\";\nimport RestaurantInfo from \"./RestaurantInfo\";\nimport restaurants from './RestaurantDatabase'\nimport \"./App.css\";\nimport Confetti from './Confetti';\n\nclass App extends React.Component {\n\t\n  constructor() {\n\t\t\n    super();\n    this.state = {\n\t\t\trestaurant: restaurants[0].restaurant,\n\t\t\ttypes: restaurants[0].type\n    };\n  }\n  randomRestaurant() {\n    const randomNumber = Math.floor(Math.random() * restaurants.length);\n    return restaurants[randomNumber];\n    \n  }\n  shuffleRestaurants(array){\n    return array.sort(()=>Math.random()-0.5)\n  }\n\n  nextClick = () => {\n    const generaterandomRestaurant = this.randomRestaurant();\n    this.setState({\n      restaurant: generaterandomRestaurant.restaurant,\n      type: generaterandomRestaurant.type\n    });\n    this.shuffleRestaurants(restaurants)\n  };\n\t\n\tpickClick = () => {\n\t\tconsole.log('Picking Works');\n\t\t\tConfetti();\n  };\n\n  randomColor() {\n    const color = `rgb(\n      ${Math.floor(Math.random() * 155)},\n      ${Math.floor(Math.random() * 155)},\n      ${Math.floor(Math.random() * 155)})`;\n    return color;\n  }\n  \n  render() {\n    return (\n      <div>\n        <RestaurantInfo\n          displayColor={this.randomColor}\n          nextClick={this.nextClick}\n\t\t\t\t\tpickClick={this.pickClick}\n          {...this.state}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}